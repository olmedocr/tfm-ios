default_platform(:ios)

platform :ios do
  before_all do
    xcversion(version: "12.5")
    setup_circle_ci
  end

  desc "Setup code signing and App Store Connect"
  lane :match_configuration do |options|
    match(
      type: options[:type],
      readonly: true,
      verbose: true
    )
  end

  desc "Perform Tests"
  lane :test do 
    match_configuration(type: "development")

    run_tests(
      scheme: "Kelo",
      code_coverage: true,
      cloned_source_packages_path: "SourcePackages"
    )

    slather(
      proj: "Kelo.xcodeproj",
      scheme: "Kelo",
      circleci: true,
      cobertura_xml: true,
      output_directory: ENV["FL_OUTPUT_DIR"],
      ignore: [
        '../../../Library/*',
        '**/DerivedData/*'
      ]
    )

  end

  desc "Upload to TestFlight"
  lane :beta do
    prepare(is_prerelease: true)
    
    pilot(
      skip_waiting_for_build_processing: true,
      api_key: ENV["APP_STORE_CONNECT_API_KEY"],
      beta_app_review_info: {
        contact_email: "rauleteolmedo@me.com",
        contact_first_name: "Raul",
        contact_last_name: "Olmedo",
        contact_phone: "5558675309",
        demo_account_name: "",
        demo_account_password: ""
      }
    )

    finish(is_prerelease: true)
  end

  desc "Release to App Store"
  lane :release do
    prepare(is_prerelease: false)

    deliver(
      skip_screenshots: true,
      skip_metadata: true,
      run_precheck_before_submit: false
    )

    finish(is_prerelease: false)
  end

  ##### Private Lanes #####
  desc "Prepare to upload and update changelog"
  private_lane :prepare do |options|
    match_configuration(type: "appstore")

    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_B64"],
      is_key_content_base64: true,
      in_house: false
    )

    increment_build_number(
      build_number: Time.new.strftime("%Y%m%d")
    )

    version = last_git_tag.split("-").first
    version.slice!(0)

    increment_version_number(
      version_number: version
    )

    changelog_path="CHANGELOG.md"

    if options[:is_prerelease]
      changelog_path="CHANGELOG-beta.md"
    end

    changelog = read_changelog(
      changelog_path: changelog_path
    )

    stamp_changelog(
      section_identifier: last_git_tag,
      git_tag: last_git_tag, 
      changelog_path: changelog_path
    )

    gym(
      clean: false,
      scheme: "Kelo",
      export_method: "app-store",
      configuration: "Release",
      cloned_source_packages_path: "SourcePackages"
    )
  end

  desc "Clean and commit version bump"
  private_lane :finish do |options|
    clean_build_artifacts

    commit_version_bump(
      message: "Deploying version #{last_git_tag}.",
      xcodeproj: "Kelo.xcodeproj",
      include: "CHANGELOG.md"
    )

    set_github_release(
      repository_name: "olmedocr/tfm-ios",
      api_token: ENV["GITHUB_TOKEN"],
      name: last_git_tag,
      tag_name: last_git_tag,
      description: changelog,
      is_prerelease: options[:is_prerelease]
    )
  end
end